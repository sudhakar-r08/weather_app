apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'dagger.hilt.android.plugin'

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.1.0"
    }
}



repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.google.com' }
    mavenCentral()
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId rootProject.applicationId
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled false

            signingConfig signingConfigs.debug
        }
        debug {
            ext.enableCrashlytics = false
            testCoverageEnabled true
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/atomicfu.kotlin_module', 'META-INF/rxjava.properties']
        }
    }

    buildFeatures {
        buildConfig = true
        dataBinding = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kapt {
        correctErrorTypes = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlin
    implementation rootProject.kotlin
    implementation rootProject.kotlinReflect

    // android supports

    implementation rootProject.appCompat
    implementation rootProject.materialDesign
    implementation rootProject.recyclerView
    implementation "androidx.cardview:cardview:1.0.0"
    implementation rootProject.coreKtx

    // architecture components
    implementation rootProject.navigationUI
    implementation rootProject.navigationFragment

    kapt rootProject.lifecycleAnnotation
    implementation rootProject.liveDataKtx
    implementation rootProject.lifecycleViewModelKtx
    implementation rootProject.roomRuntime
    kapt rootProject.roomCompiler

    // di
    implementation rootProject.hilt
    kapt rootProject.hiltKapt

    // rx
    implementation rootProject.rxJava
    implementation rootProject.rxKotlin
    implementation rootProject.rxAndroid
    implementation rootProject.rxAnimations

    // network
    implementation rootProject.retrofit
    implementation rootProject.okHttp
    implementation rootProject.moshi
    implementation rootProject.moshiConverter
    implementation rootProject.moshiKotlin
    kapt rootProject.moshiKapt
    implementation rootProject.rxJavaAdapter

    // image
    implementation rootProject.picasso

    // debug
    implementation rootProject.stethoCore
    implementation rootProject.stethoOkHttp
    implementation rootProject.stethoUrlConnection
    implementation rootProject.timber



    // date & time
    implementation rootProject.threetenabp

    // search
    implementation "com.algolia:algoliasearch-android:$algoliaVersion"

    // test
    testImplementation rootProject.junit
    testImplementation rootProject.junitTestExt
    androidTestImplementation rootProject.androidxTestRunner
    androidTestImplementation rootProject.androidxTestRules
    androidTestImplementation rootProject.espressoCore
    testImplementation rootProject.truthExt
    testImplementation rootProject.truth
    testImplementation rootProject.mockK
    testImplementation rootProject.coreTesting
    testImplementation rootProject.robolectric
}

ktlint {
    android = true

    version = rootProject.klintVersion
    kotlinScriptAdditionalPaths {
        include fileTree("scripts/")
    }
    filter {
        exclude("**/generated/**")
        include("**/kotlin/**")
        include("**/java/**")
    }
}

apply plugin: 'com.google.gms.google-services'
